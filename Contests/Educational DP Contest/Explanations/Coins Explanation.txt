Let f(i, j) be the probability of getting exactly i heads among the first j coins. 

We have two possibilities for the j-th coin. 

Case 1 - It is a heads. 

The probability of getting a head is p[j]. 

And we need to get exactly (i - 1) heads from the previous (j - 1) coins. 

This is given by p[j] x f(i - 1, j - 1)

Case 2 - It is tails

The probability is given by (1 - p[j])

We need i heads from the first j - 1 coins. 

The probability is (1 - p[j]) x f(i, j - 1)

The base case is that f(0, 0) = 1. 

------

To get the answer we need to sum over all f(i, N) where i > N/2.

----------

int main()
{
    int no_of_coins;
    cin >> no_of_coins;

    for(int i = 1; i <= no_of_coins; i++)
        cin >> probability[i];

    memset(probability_heads, 0, sizeof(probability_heads));
    probability_heads[0][0] = 1;

    for(int i = 1; i <= no_of_coins; i++)
    {
        double head_event = probability[i], tail_event = 1 - probability[i];

        probability_heads[0][i] = tail_event*probability_heads[0][i - 1];

        for(int heads = 1; heads <= i; heads++)
        {
            probability_heads[heads][i] = head_event*probability_heads[heads - 1][i - 1] + tail_event*probability_heads[heads][i - 1];
        }
    }

    double answer = 0;
    for(int i = no_of_coins/2 + 1; i <= no_of_coins; i++)
        answer += probability_heads[i][no_of_coins];

    cout << setprecision(9) << answer;
    return 0;
}
